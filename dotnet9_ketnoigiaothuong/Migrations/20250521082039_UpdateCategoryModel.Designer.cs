// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet9_ketnoigiaothuong.Infrastructure.Context;

#nullable disable

namespace dotnet9_ketnoigiaothuong.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250521082039_UpdateCategoryModel")]
    partial class UpdateCategoryModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryID")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.HasIndex("ParentCategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessSector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalDocuments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Representative")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.CompanyDocument", b =>
                {
                    b.Property<int>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentID"));

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentID");

                    b.HasIndex("CompanyID");

                    b.ToTable("CompanyDocuments");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractID"));

                    b.Property<int?>("BuyerCompanyID")
                        .HasColumnType("int");

                    b.Property<string>("BuyerSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DigitalSignature")
                        .HasColumnType("bit");

                    b.Property<string>("DisputeResolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SellerCompanyID")
                        .HasColumnType("int");

                    b.Property<string>("SellerSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractID");

                    b.HasIndex("BuyerCompanyID");

                    b.HasIndex("SellerCompanyID");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.InvestmentRound", b =>
                {
                    b.Property<int>("RoundID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoundID"));

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ActualProfit")
                        .HasColumnType("float");

                    b.Property<double?>("ActualRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ContractID")
                        .HasColumnType("int");

                    b.Property<double?>("InvestmentAmount")
                        .HasColumnType("float");

                    b.Property<double?>("InvestmentRate")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ProfitCommitment")
                        .HasColumnType("float");

                    b.Property<double?>("Progress")
                        .HasColumnType("float");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoundID");

                    b.HasIndex("ContractID");

                    b.ToTable("InvestmentRounds");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationID"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("NotificationID");

                    b.HasIndex("UserID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("ContractID")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.HasIndex("ContractID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.PeriodicTransaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"));

                    b.Property<int?>("ContractID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionID");

                    b.HasIndex("ContractID");

                    b.ToTable("PeriodicTransactions");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("ApprovalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedByUserUserID")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("ProductID");

                    b.HasIndex("ApprovedByUserUserID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.QuotationRequest", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<string>("AdditionalRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerCompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SellerCompanyID")
                        .HasColumnType("int");

                    b.HasKey("RequestID");

                    b.HasIndex("BuyerCompanyID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SellerCompanyID");

                    b.ToTable("QuotationRequests");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.QuotationResponse", b =>
                {
                    b.Property<int>("ResponseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResponseID"));

                    b.Property<int?>("BuyerCompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProposedPrice")
                        .HasColumnType("float");

                    b.Property<int?>("RequestID")
                        .HasColumnType("int");

                    b.Property<int?>("SellerCompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResponseID");

                    b.HasIndex("BuyerCompanyID");

                    b.HasIndex("RequestID");

                    b.HasIndex("SellerCompanyID");

                    b.ToTable("QuotationResponses");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContractID")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiverCompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SenderCompanyID")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.HasIndex("ContractID");

                    b.HasIndex("ReceiverCompanyID");

                    b.HasIndex("SenderCompanyID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Shipment", b =>
                {
                    b.Property<int>("ShipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentID"));

                    b.Property<int?>("ContractID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ShipmentID");

                    b.HasIndex("ContractID");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.TransactionHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ContractID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerformedByUserID")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("ContractID");

                    b.HasIndex("PerformedByUserID");

                    b.ToTable("TransactionHistories");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.UserAccount", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("CompanyID");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Category", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryID")
                        .HasConstraintName("FK__Category__Parent__403A8C7D");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.CompanyDocument", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "Company")
                        .WithMany("CompanyDocuments")
                        .HasForeignKey("CompanyID")
                        .HasConstraintName("FK__CompanyDo__Compa__398D8EEE");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "BuyerCompany")
                        .WithMany("BuyerContracts")
                        .HasForeignKey("BuyerCompanyID")
                        .HasConstraintName("FK__Contract__BuyerC__52593CB8");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "SellerCompany")
                        .WithMany("SellerContracts")
                        .HasForeignKey("SellerCompanyID")
                        .HasConstraintName("FK__Contract__Seller__5165187F");

                    b.Navigation("BuyerCompany");

                    b.Navigation("SellerCompany");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.InvestmentRound", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", "Contract")
                        .WithMany("InvestmentRounds")
                        .HasForeignKey("ContractID")
                        .HasConstraintName("FK__Investmen__Contr__59063A47");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Notification", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.UserAccount", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK__Notificat__UserI__6E01572D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Payment", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractID")
                        .HasConstraintName("FK__Payment__Contrac__5DCAEF64");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.PeriodicTransaction", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", "Contract")
                        .WithMany("PeriodicTransactions")
                        .HasForeignKey("ContractID")
                        .HasConstraintName("FK__PeriodicT__Contr__5629CD9C");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Product", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.UserAccount", "ApprovedByUser")
                        .WithMany("Products")
                        .HasForeignKey("ApprovedByUserUserID");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK__Product__Categor__440B1D61");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyID")
                        .HasConstraintName("FK__Product__Company__4316F928");

                    b.Navigation("ApprovedByUser");

                    b.Navigation("Category");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.QuotationRequest", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "BuyerCompany")
                        .WithMany("QuotationRequestsAsBuyer")
                        .HasForeignKey("BuyerCompanyID")
                        .HasConstraintName("FK__Quotation__Buyer__47DBAE45");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Product", "Product")
                        .WithMany("QuotationRequests")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK__Quotation__Produ__49C3F6B7");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "SellerCompany")
                        .WithMany("QuotationRequestsAsSeller")
                        .HasForeignKey("SellerCompanyID")
                        .HasConstraintName("FK__Quotation__Selle__48CFD27E");

                    b.Navigation("BuyerCompany");

                    b.Navigation("Product");

                    b.Navigation("SellerCompany");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.QuotationResponse", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "BuyerCompany")
                        .WithMany("QuotationResponsesAsBuyer")
                        .HasForeignKey("BuyerCompanyID")
                        .HasConstraintName("FK__Quotation__Buyer__4D94879B");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.QuotationRequest", "QuotationRequest")
                        .WithMany("QuotationResponses")
                        .HasForeignKey("RequestID")
                        .HasConstraintName("FK__Quotation__Reque__4CA06362");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "SellerCompany")
                        .WithMany("QuotationResponsesAsSeller")
                        .HasForeignKey("SellerCompanyID")
                        .HasConstraintName("FK__Quotation__Selle__4E88ABD4");

                    b.Navigation("BuyerCompany");

                    b.Navigation("QuotationRequest");

                    b.Navigation("SellerCompany");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Review", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", "Contract")
                        .WithMany("Reviews")
                        .HasForeignKey("ContractID")
                        .HasConstraintName("FK__Review__Contract__66603565");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "ReceiverCompany")
                        .WithMany("ReviewsAsReceiver")
                        .HasForeignKey("ReceiverCompanyID")
                        .HasConstraintName("FK__Review__Receiver__656C112C");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "SenderCompany")
                        .WithMany("ReviewsAsSender")
                        .HasForeignKey("SenderCompanyID")
                        .HasConstraintName("FK__Review__SenderCo__6477ECF3");

                    b.Navigation("Contract");

                    b.Navigation("ReceiverCompany");

                    b.Navigation("SenderCompany");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Shipment", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", "Contract")
                        .WithMany("Shipments")
                        .HasForeignKey("ContractID")
                        .HasConstraintName("FK__Shipment__Contra__619B8048");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.TransactionHistory", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", "Contract")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("ContractID")
                        .HasConstraintName("FK__Transacti__Contr__6A30C649");

                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.UserAccount", "PerformedByUser")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("PerformedByUserID")
                        .HasConstraintName("FK__Transacti__Perfo__6B24EA82");

                    b.Navigation("Contract");

                    b.Navigation("PerformedByUser");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.UserAccount", b =>
                {
                    b.HasOne("dotnet9_ketnoigiaothuong.Domain.Entities.Company", "Company")
                        .WithMany("UserAccounts")
                        .HasForeignKey("CompanyID")
                        .HasConstraintName("FK__UserAccou__Compa__3C69FB99");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Company", b =>
                {
                    b.Navigation("BuyerContracts");

                    b.Navigation("CompanyDocuments");

                    b.Navigation("Products");

                    b.Navigation("QuotationRequestsAsBuyer");

                    b.Navigation("QuotationRequestsAsSeller");

                    b.Navigation("QuotationResponsesAsBuyer");

                    b.Navigation("QuotationResponsesAsSeller");

                    b.Navigation("ReviewsAsReceiver");

                    b.Navigation("ReviewsAsSender");

                    b.Navigation("SellerContracts");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Contract", b =>
                {
                    b.Navigation("InvestmentRounds");

                    b.Navigation("Payments");

                    b.Navigation("PeriodicTransactions");

                    b.Navigation("Reviews");

                    b.Navigation("Shipments");

                    b.Navigation("TransactionHistories");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.Product", b =>
                {
                    b.Navigation("QuotationRequests");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.QuotationRequest", b =>
                {
                    b.Navigation("QuotationResponses");
                });

            modelBuilder.Entity("dotnet9_ketnoigiaothuong.Domain.Entities.UserAccount", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Products");

                    b.Navigation("TransactionHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
